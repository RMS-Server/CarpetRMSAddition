# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: Check
on: 
  pull_request:
  push:
permissions:
  contents: read
jobs:
  Get-Versions:
    runs-on: ubuntu-24.04
    outputs:
      versions: ${{ steps.Get_Versions.outputs.versions }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Get Minecraft Versions
        id: Get_Versions
        run: |
          VERSIONS=$(find versions -maxdepth 1 -type d -name "[0-9]*.[0-9]*" | xargs -I {} basename {} | sort -V | jq -R . | jq -s -c .)
          echo "versions=$VERSIONS" >> $GITHUB_OUTPUT
  Build-Matrix:
    runs-on: ubuntu-24.04
    needs: Get-Versions
    strategy:
      matrix:
        minecraft_version: ${{ fromJson(needs.Get-Versions.outputs.versions) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'temurin'
      - name: Make Gradle Wrapper Executable
        run: chmod +x ./gradlew
      
      - name: Build For ${{ matrix.minecraft_version }}
        run: ./gradlew :${{ matrix.minecraft_version }}:build

